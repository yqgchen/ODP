% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetPairDist.R
\name{GetPairDist}
\alias{GetPairDist}
\title{Get pairwise distances between observations (data objects)}
\usage{
GetPairDist(data, distfun = NULL, newdata = NULL, ...)
}
\arguments{
\item{data}{Either a matrix or data frame with \eqn{n} rows where each row holds one observation 
in the (training) data, or a list (but not a data frame) of length \eqn{n} where each element holds one observation.}

\item{distfun}{A function with (at least) two arguments \code{x} and \code{y} 
computing the distance between two observations \code{x} and \code{y}. 
Default: Euclidean distance \code{function (x,y) {sqrt(sum((x-y)^2))}}.}

\item{newdata}{Either a matrix or data frame with \eqn{m} rows and the same number of columns as \code{data} 
where each row holds one new observation in addition to the observations in \code{data}, 
or a list (but not a data frame) of length \eqn{m} where each element is of the same format as those in \code{data} 
and holds one new observation. 
Pairwise distances from observations in \code{newdata} to those in \code{data} are to be computed.}

\item{...}{Optional additional arguments of \code{distfun}.}
}
\value{
An \eqn{(n+m)}-by-\eqn{n} matrix holding the pairwise distances between observations.
}
\description{
Get pairwise distances between observations (data objects)
}
\examples{
## 2-Wasserstein distance for distributions on the real line
mu <- 1:4
qSup <- seq(0,1,len=1001)[-c(1,1001)]
data <- lapply( mu, qnorm, p = qSup )
distmat <- GetPairDist( data = data, distfun = l2metric, sup = qSup )
}
